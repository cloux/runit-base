#!/bin/sh
#
# runit-init compatible reboot
# (cloux@rote.ch)

PATH=/usr/sbin:/usr/bin:/sbin:/bin

# check root access
if [ $(id -u) -ne 0 ]; then printf "Need to be root!\n"; exit 1; fi

# check PID1
if grep -vq runit /proc/1/cmdline; then
	printf "ERROR: runit is not PID1, reboot failed.\n"
	exit 1
fi

if [ "$1" = "soft" ]; then
  MSG="System is going down for soft reboot..."
  install --mode=755 /dev/null /run/runit.kexecreboot
else
  MSG="System is going down for reboot..."
  rm -f /run/runit.kexecreboot
fi
# we check for these files in stage 3 to go for halt or reboot
install --mode=0 /dev/null /run/runit.stopit
install --mode=755 /dev/null /run/runit.reboot

# print warning to all terminals
printf "\n%s\n" "$MSG" | wall --nobanner

# find runit-init binary
RUNIT_INIT=$(grep -o 'init=[^ ]*' /proc/cmdline | grep -o '[^=]*$')
[ "$RUNIT_INIT" ] || RUNIT_INIT=/sbin/init
# proceed with reboot process
$RUNIT_INIT 6

# Don't give the terminal back immediately, the user should not be doing
# anything more, just wait for the reboot. If after 15 seconds
# the machine still is not rebooted, probably something went wrong,
# give the terminal back. Ctrl+C gives the terminal back immediately.
sleep 15
