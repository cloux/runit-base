#!/bin/sh
# NFS mount daemon - implements the server side of the NFS MOUNT protocol
# Equivalent of /etc/init.d/nfs-kernel-server.
# (cloux@rote.ch)
exec 2>&1

NAME=rpc.mountd
DAEMON=$(command -v $NAME)
[ -x "$DAEMON" ] || exit

# See if the kernel supports NFSD
if ! grep -qs '\snfsd$' /proc/filesystems; then
	printf '%s ERROR: kernel does not support NFSD.\n' "$NAME"
	exit
fi

EXPORTFS=$(command -v exportfs)
[ -x "$EXPORTFS" ] || exit
sv start rpcbind >/dev/null || exit

# Load config
[ -r /etc/default/nfs-common ] && . /etc/default/nfs-common
[ -r /etc/default/nfs-kernel-server ] && . /etc/default/nfs-kernel-server
[ -r ./conf ] && . ./conf

# NFSD is required
mountpoint -q "/proc/fs/nfsd" || mount -t nfsd nfsd /proc/fs/nfsd
svactivate rpc.nfsd >/dev/null
sv check rpc.nfsd >/dev/null || exit
# SVCGSSD is only required for Kerberos exports
[ "$NEED_SVCGSSD" = "yes" ] && [ -x "$(command -v rpc.svcgssd)" ]  && svactivate rpc.svcgssd >/dev/null
# IDMAPD might not be activated from rpcbind as common service, but is required for the server
([ "$NEED_IDMAPD" != "no" ] && [ -x "$(command -v rpc.idmapd)" ]) && svactivate rpc.idmapd >/dev/null

# Synchronize /var/lib/nfs/etab with /etc/exports and /etc/exports.d
"$EXPORTFS" -r

# Terminate unsupervised instance
pkill -f "$DAEMON"

# Run mountd
exec "$DAEMON" --foreground $RPCMOUNTDOPTS 2>/dev/null
